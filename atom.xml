<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZEALOFT</title>
  <subtitle>在这里阅读一个有趣的人</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.zealoft.com/"/>
  <updated>2016-10-19T04:16:38.000Z</updated>
  <id>http://blog.zealoft.com/</id>
  
  <author>
    <name>Jim Zenn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在伯克利聊一聊机器学习</title>
    <link href="http://blog.zealoft.com/2016/10/18/ML@B-interview/"/>
    <id>http://blog.zealoft.com/2016/10/18/ML@B-interview/</id>
    <published>2016-10-19T00:50:24.000Z</published>
    <updated>2016-10-19T04:16:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>随着摩尔定律逼近极限，计算能力到达了一个新的高度；计算机技术的历史也跨入了新的篇章：以人工智能为中心的新时代已经拉开了序幕，将在各行各业带来继互联网、移动之后的新一轮革命。</p>
<p>此次爱范儿走入计算机强校 UC Berkeley，对话 <a href="https://ml.berkeley.edu" target="_blank" rel="external">ML@B (Machine Learning @ Berkeley)</a> 的两位创始人 Ted Xiao 和 Gautham Kesineni，他们同时也是 <a href="http://bair.berkeley.edu" target="_blank" rel="external">BAIR  (Berkeley Artificial Intelligence Research Lab)</a> 的学生。</p>
<p><img src="引起大量关注的为黑白图片上色的算法正是来自于 BAIR 实验室" alt="http://richzhang.github.io/colorization/resources/images/teaser3.jpg"></p>
<p>ML@B 创立仅仅不到一年，却已经与 GitHub, SAP, Intuit 等企业有了多次合作，也在 UC Berkeley 迅速收获大量关注。ML@B 希望能够将抢强大的机器学习普及到  UC Berkeley 的各个研究领域；他们自己也有许多机器学习相关项目。比如他们现在正在为 GitHub 写算法，来帮助识别项目代码所使用的语言。他们的研究部门也在开发新的 基于 TCP 协议的并行机器学习算法。通过这次访谈，我们希望可以从他们的与大公司的合作与他们自身的学术经历中，一窥硅谷机器学习领域发展状况。</p>
<h2 id="数据，企业机器学习的命脉"><a href="#数据，企业机器学习的命脉" class="headerlink" title="数据，企业机器学习的命脉"></a>数据，企业机器学习的命脉</h2><p>机器学习有两个必需的要素：计算能力和大量实际数据。</p>
<p>获取强大的计算能力如今已经不再是一件难事。由于 Google Cloud Platform、 Microsoft Azure、 Amazon Web Service 等平台趋于成熟，大大小小的数据体量都能够很好的处理。</p>
<p>而关于数据，这就是另一个故事了。随着机器学习受到的关注越来越多，机器学习的社区支持也不断壮大。对于科研人员和学生而言，现在可以称得上是机器学习算法研究的黄金时代：网络上有了大量公开的数据库；许多大公司也释出了许多优质数据库。关于一个具体的研究问题，甚至已经有了标准数据库（如 <a href="http://yann.lecun.com/exdb/mnist/" target="_blank" rel="external">The MNIST Database</a>）用于研究和测试算法性能。</p>
<p>但是对于真正的企业而言，针对一个具体的问题，没有足够体量的数据是无法进行机器学习的。Gautham 告诉爱范儿，就目前而言，数据造成的企业差距还没有那么明显；但是有一天，数据也极可能成为一种壁垒；而这一天已经在慢慢接近。</p>
<h2 id="从机器人到人工智能，越来越多工作将被取代"><a href="#从机器人到人工智能，越来越多工作将被取代" class="headerlink" title="从机器人到人工智能，越来越多工作将被取代"></a>从机器人到人工智能，越来越多工作将被取代</h2><p>我们必须面对这样一个现实：机器正在将逐步取代人类的工作。</p>
<p>过去，机器取代的更多是机械重复的工作。即使没有人工智能，机器已经有可靠、经济、精度高、不疲劳、一次性投入持续产出等诸多优势。在<a href="http://www2.deloitte.com/content/dam/Deloitte/uk/Documents/uk-futures/london-futures-agiletown.pdf" target="_blank" rel="external">牛津大学 2014 年的报告</a>中，英国 35% 的工作将在未来十到二十年内被取代。这个过程已经开始发生，在富士康的流水线上，机器人已经开始取代传统工人的地位：今年五月，<a href="http://www.bbc.com/news/technology-36376966" target="_blank" rel="external">富士康用机器人替换了 60000 名工厂工人</a>。</p>
<p>如今加上人工智能的技术加持，机器更有了随机应变和自主决策的能力。一个标志性的事件就是 AlphaGo 与李世石的人机大战，这一战标志着人工智在复杂决策层面，已经有了与人类旗鼓相当的能力。这标志着人工智能开始有能力取代有脑力决策参与的工作。首当其冲的就是司机行业，IT 企业摩拳擦掌，争相研发无人驾驶算法，许多公司已经研发出了较为成熟的技术。无人驾驶替代传统司机已指日可待，在 Uber 和 Lyft 的对于未来的规划蓝图中，绝大部分司机也将在不久的将来被自动驾驶汽车取代。现在的问题只是实施细则而已。<img src="https://tctechcrunch2011.files.wordpress.com/2016/09/tra_graph4.png?w=2048&amp;h=1152" alt="Lyft 的五年计划中，人类司机的占比将慢慢下降"></p>
<p>司机当然不会是唯一收到冲击的行业：但凡有着相对简单决策规则的工作都会受到冲击。而随着人工智能的水平的不断提高，人工智能可以取代的岗位将越来越多。这对人类到底是福是祸？两位创始人表示乐观，因为这意味着人类可以将时间花在更多更需要高级智能的工作上，而不是浪费时间机械重复。但这可能意味着，未来工作对于教育的要求会更高。</p>
<h2 id="设计者不知道人工智能做出决策的原因，但没有关系"><a href="#设计者不知道人工智能做出决策的原因，但没有关系" class="headerlink" title="设计者不知道人工智能做出决策的原因，但没有关系"></a>设计者不知道人工智能做出决策的原因，但没有关系</h2><p>人工智能如此优秀，是因为人工智能通过大量数据的输入，计算了数据内在的规律；在人工智能做出决策时，它只是将输入放入经验模型进行计算而得出输出。稍对神经网络算法有一些理解的人们知道，随着神经网络层数的增多，模型也就变得极为复杂。从将近上百层隐含层中，是很难直观地了解人工智能做出的决策的原因的。</p>
<p>Ted 告诉我，如果一个人自己通过机器学习建立了一个模型，模型的运行效果极好，而设计者却无法直观的理解为什么，这确实想想都有些可怕。”现在在 Stanford 和 Berkeley，许多人在努力将建立的大型模型视觉化，努力弄清楚中间到底发生了什么，让他们变得更加能够被理解。”</p>
<p>而 Gautham 则提出了不一样的见解。他认为，总有一天，机器学习训练出来的人工智能会变得极其复杂，以至于想要彻底弄清楚这个模型的工作原理是几乎不可能的。”我们应该学会习惯这种情况，”他举了个例子，”比如今天一个大型机组，我们也并不清楚每一台具体在算什么，但是我们把握着它的整体动向。机器学习也是一样，虽然我们不清楚其中的具体每一层做的是什么，这个模型的输入和输出却是清楚的。”</p>
<p>确实，在我们生活中，处处都是黑盒。在使用一个网站的时候，我们并不追究网站的实现方式；写网站的工程师也并不需要知道网站框架的每一个细节。我们已经生活在这种可控的未知里。</p>
<h2 id="仍在萌芽，却在飞速增长"><a href="#仍在萌芽，却在飞速增长" class="headerlink" title="仍在萌芽，却在飞速增长"></a>仍在萌芽，却在飞速增长</h2><p>虽然机器学习在这两年发展极快，但是相关岗位的需求却没有想象的大。Ted 告诉我，在去年 Berkeley 的招聘会上，机器学习岗位普遍要求有博士学历，而且往往都是一些大公司在招聘相关岗位。可以看到，机器学习仍然还没有走下计算机科学的神坛。但是今年随着 AlphaGo 四比一击败李世石，世界认识到了机器学习的威力，机器学习的岗位确实相较往年有了显著的增加。在近几个月，硅谷机器学习相关的项目如雨后春笋冒出，他们也明显感觉到了潜在的合作不断在增加。</p>
<h2 id="总结：最好的时代，最坏的时代"><a href="#总结：最好的时代，最坏的时代" class="headerlink" title="总结：最好的时代，最坏的时代"></a>总结：最好的时代，最坏的时代</h2><p>有了机器学习的助攻，人类有了研究传统科学难以研究的复杂问题的能力；人们甚至可以将机理尚不清晰的模型直接部署到产品中，去帮助人类解决问题。但是随着人工智能的迅速崛起，社会的就业结构也遇到了巨大的考验，简单人力工作的市场势必收到机器人与人工智能的挤压而缩水或者转移。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随着摩尔定律逼近极限，计算能力到达了一个新的高度；计算机技术的历史也跨入了新的篇章：以人工智能为中心的新时代已经拉开了序幕，将在各行各业带来继互联网、移动之后的新一轮革命。&lt;/p&gt;
&lt;p&gt;此次爱范儿走入计算机强校 UC Berkeley，对话 &lt;a href=&quot;https:
    
    </summary>
    
      <category term="Interviews" scheme="http://blog.zealoft.com/categories/Interviews/"/>
    
    
      <category term="ML@B" scheme="http://blog.zealoft.com/tags/ML-B/"/>
    
  </entry>
  
  <entry>
    <title>You Know Where to Find Me</title>
    <link href="http://blog.zealoft.com/2016/10/14/You-Know-Where-to-Find-Me/"/>
    <id>http://blog.zealoft.com/2016/10/14/You-Know-Where-to-Find-Me/</id>
    <published>2016-10-15T00:23:54.000Z</published>
    <updated>2016-10-18T07:36:44.000Z</updated>
    
    <content type="html"><![CDATA[<img src="https://hd.unsplash.com/photo-1435527173128-983b87201f4d" class="full-image" alt="schedule">
<p>Find out what I’m doing at <a href="http://schedule.zealoft.com/" target="_blank" rel="external">http://schedule.zealoft.com/</a>.</p>
<a id="more"></a>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=28930654&auto=1&height=66"></iframe>

<p>I’ve been thinking for a while about sharing my life schedule. I finally realized it. You can now read my schedule on this page <a href="http://schedule.zealoft.com/" target="_blank" rel="external">http://schedule.zealoft.com/</a>.</p>
<p>I share my schedule so that you can always know know where I am, what I am doing and what I am going to do. Whenever you want to join my life, you always know when and where to. Want to watch a movie with me? Sure, check my schedule: If I’m free, I’m free. See I’m running and want to join? Great, I would love to have someone run with me. Or, for no particular reasons… Isn’t that fun?</p>
<p>It also helps me to keep up with my schedule. Many planned events are not accomplished just because I feel lazy. However, I need to keep my words to make this page credible. I promise that you will find me as this page indicates.</p>
<p>I wish to receive your <em>pull requests</em> soon.</p>
<p>Sincerely,</p>
<p>Jim</p>
<blockquote>
<p>The code of the <a href="http://schedule.zealoft.com/" target="_blank" rel="external">schedule page</a> is going to be merged into the <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">hexo theme NeXT</a>. If you want to read the detail of the implementation, check out <a href="https://github.com/iissnan/hexo-theme-next/pull/1167/files#diff-a632191546f0a5eaa4e8e47f64b09e6c" target="_blank" rel="external">this page</a>. I apologize for not using English in this pull request, but I think I write sufficient comments in the code. Leave some comments if you have any question.</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://hd.unsplash.com/photo-1435527173128-983b87201f4d&quot; class=&quot;full-image&quot; alt=&quot;schedule&quot; /&gt;
&lt;p&gt;Find out what I’m doing at &lt;a href=&quot;http://schedule.zealoft.com/&quot;&gt;http://schedule.zealoft.com/&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="code" scheme="http://blog.zealoft.com/categories/code/"/>
    
    
      <category term="Google Calendar" scheme="http://blog.zealoft.com/tags/Google-Calendar/"/>
    
      <category term="life" scheme="http://blog.zealoft.com/tags/life/"/>
    
      <category term="hexo" scheme="http://blog.zealoft.com/tags/hexo/"/>
    
      <category term="open source" scheme="http://blog.zealoft.com/tags/open-source/"/>
    
      <category term="schedule" scheme="http://blog.zealoft.com/tags/schedule/"/>
    
  </entry>
  
  <entry>
    <title>Raspberry Pi 采集图像并自动上传</title>
    <link href="http://blog.zealoft.com/2016/09/08/Raspberry%20Pi%20%E9%87%87%E9%9B%86%E5%9B%BE%E5%83%8F%E5%B9%B6%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0/"/>
    <id>http://blog.zealoft.com/2016/09/08/Raspberry Pi 采集图像并自动上传/</id>
    <published>2016-09-09T00:50:24.000Z</published>
    <updated>2016-10-19T04:15:36.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/uploads/timelapse-on-euclid-hall.gif" class="full-image" alt="timelapse" title="在 Euclid Hall 屋顶用 Raspberry Pi 拍摄的延时摄影">
<p>　　每一次我跑步上 Berkeley Hills，沿途就可以眺望北湾两岸的风景。于是我想要用树莓派在那些观景点完成一个长时间的延时摄影。这周终于付诸实践。<br><a id="more"></a><br>　　静态延时摄影说白了就是：将相机固定在一个地点， 过一个固定的时间就拍一张照片，最后在将这些照片组合起来成为一个影片。因为要拍摄大约一天时间，用真的相机或手机去拍，一个怕丢，另一个也要求有这个模式，这个过程也比较费电，人可能也要陪在边上。这两天为了买几个钉子去了一次五金店，看到那里有卖用来做篱笆的木板，忽然有了想法：如果把树莓派、充电宝和相机装在木板上，那么把这个木板随便插在一个有网的地方，那不就可以拍延时摄影了吗。如果 ssh 端口用 ngrok 映射到网络上，还可以远程查看程序的执行情况。拍完的照片上传到谷歌网盘，再删除本地的副本，那么对树莓派的 SD 卡也没有太大的容量要求。<br>　　总结一下，只需要：Raspberry Pi、Raspberry Pi Camera、充电宝、木板就够了。<br>　　花4刀买下木板，买了几个对应尺寸的螺丝，一共大概花了6刀。把树莓派和树莓派的相机板钉在木板上，保证不要晃动；再把充电宝固定上去，物理部分就完成了。<br>　　接下来就是代码。无非是两个部分，一个是调用相机定时拍一张照，这个非常简单。调用 PiCamera 模块两三行就写好了。有意思的是自动上传到 Google Drive。这个部分其实也不复杂，按照 Google 官方的 API 文档大概两个小时就完成了。<br>　　下附主文件代码(python 2.7.12)。运行时还需要 API Key，这是免费的，直接去谷歌API申请就行。如果哪里有问题，可以留言问我。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</div><div class="line"></div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> datetime</div><div class="line"><span class="keyword">import</span> picamera</div><div class="line"><span class="keyword">import</span> cPickle <span class="keyword">as</span> pickle</div><div class="line"></div><div class="line"><span class="keyword">import</span> httplib2</div><div class="line"><span class="keyword">import</span> os</div><div class="line"></div><div class="line"><span class="keyword">import</span> apiclient</div><div class="line"><span class="keyword">import</span> oauth2client</div><div class="line"><span class="keyword">from</span> oauth2client <span class="keyword">import</span> client</div><div class="line"><span class="keyword">from</span> oauth2client <span class="keyword">import</span> tools</div><div class="line"></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line">reload(sys)</div><div class="line">sys.setdefaultencoding(<span class="string">'utf-8'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">import</span> argparse</div><div class="line">    flags = argparse.ArgumentParser(parents=[tools.argparser]).parse_args()</div><div class="line"><span class="keyword">except</span> ImportError:</div><div class="line">    flags = <span class="keyword">None</span></div><div class="line"></div><div class="line">VERSION = <span class="string">'0.1beta'</span></div><div class="line"></div><div class="line"><span class="comment"># OAuth 2.0 scope that will be authorized.</span></div><div class="line"><span class="comment"># Check https://developers.google.com/drive/scopes for all available scopes.</span></div><div class="line">SCOPES = <span class="string">'https://www.googleapis.com/auth/drive'</span></div><div class="line"></div><div class="line"><span class="comment"># Location of the client secrets.</span></div><div class="line">CLIENT_SECRET_FILE = <span class="string">'client_secrets.json'</span></div><div class="line">APPLICATION_NAME = <span class="string">'capturePi'</span></div><div class="line"></div><div class="line"><span class="comment"># Folder id</span></div><div class="line">FOLDER_ID = <span class="string">'0B_6TJ0QR4AQLX2lKcDZlQVlDYkU'</span></div><div class="line"></div><div class="line"><span class="comment"># Resolution of the image</span></div><div class="line">RESOLUTION = (<span class="number">1024</span>, <span class="number">768</span>)</div><div class="line"></div><div class="line"><span class="comment"># Where to store the temp data</span></div><div class="line">LOCALPATH = <span class="string">'./data/'</span></div><div class="line"></div><div class="line"><span class="comment"># interval</span></div><div class="line">INTERVAL = <span class="string">'180'</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_credentials</span><span class="params">()</span>:</span></div><div class="line">    <span class="string">"""Gets valid user credentials from storage.</span></div><div class="line"></div><div class="line">    If nothing has been stored, or if the stored credentials are invalid,</div><div class="line">    the OAuth2 flow is completed to obtain the new credentials.</div><div class="line"></div><div class="line">    Returns:</div><div class="line">    Credentials, the obtained credential.</div><div class="line">    """</div><div class="line">    home_dir = os.path.expanduser(<span class="string">'~'</span>)</div><div class="line">    credential_dir = os.path.join(home_dir, <span class="string">'.credentials'</span>)</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(credential_dir):</div><div class="line">        os.makedirs(credential_dir)</div><div class="line">    credential_path = os.path.join(credential_dir,</div><div class="line">            <span class="string">'capturePi_credentials.json'</span>)</div><div class="line"></div><div class="line">    store = oauth2client.file.Storage(credential_path)</div><div class="line">    credentials = store.get()</div><div class="line">    <span class="keyword">if</span> <span class="keyword">not</span> credentials <span class="keyword">or</span> credentials.invalid:</div><div class="line">        flow = client.flow_from_clientsecrets(CLIENT_SECRET_FILE, SCOPES)</div><div class="line">        flow.user_agent = APPLICATION_NAME</div><div class="line">        flow.redirect_uri = oauth2client.client.OOB_CALLBACK_URN</div><div class="line">        authorize_url = flow.step1_get_authorize_url()</div><div class="line">        print(<span class="string">'Go to the following link in your browser: '</span> + authorize_url)</div><div class="line">        code = raw_input(<span class="string">'Enter verification code: '</span>).strip()</div><div class="line">        credentials = flow.step2_exchange(code)</div><div class="line">        store.put(credentials)</div><div class="line"></div><div class="line">        print(<span class="string">'Storing credentials to '</span> + credential_path)</div><div class="line">    <span class="keyword">return</span> credentials</div><div class="line"></div><div class="line"><span class="comment"># Create an authorized Drive API client.</span></div><div class="line">credentials = get_credentials()</div><div class="line">http = credentials.authorize(httplib2.Http())</div><div class="line">service = apiclient.discovery.build(<span class="string">'drive'</span>, <span class="string">'v3'</span>, http=http)</div><div class="line"></div><div class="line"><span class="comment"># Find files</span></div><div class="line"><span class="comment"># results = service.files().list(</span></div><div class="line"><span class="comment">#     pageSize=100,</span></div><div class="line"><span class="comment">#     fields="nextPageToken, files(id, name)",</span></div><div class="line"><span class="comment">#     orderBy="starred"</span></div><div class="line"><span class="comment">#     ).execute()</span></div><div class="line"><span class="comment"># items = results.get('files', [])</span></div><div class="line"><span class="comment"># if not items:</span></div><div class="line"><span class="comment">#     print('No files found.')</span></div><div class="line"><span class="comment"># else:</span></div><div class="line"><span class="comment">#     print('Files:')</span></div><div class="line"><span class="comment">#     for item in items:</span></div><div class="line"><span class="comment">#         print('&#123;0&#125; (&#123;1&#125;)'.format(item['name'], item['id']))</span></div><div class="line"></div><div class="line">print(<span class="string">'Connection to Google Drive has been establised.'</span>)</div><div class="line"></div><div class="line"><span class="comment"># with an instance of PiCamera class</span></div><div class="line"><span class="keyword">with</span> picamera.PiCamera() <span class="keyword">as</span> camera:</div><div class="line">    <span class="comment"># Initializing PiCamera</span></div><div class="line">    camera.resolution = RESOLUTION</div><div class="line">    <span class="comment"># camera warm-up time</span></div><div class="line">    time.sleep(<span class="number">2</span>)</div><div class="line">    <span class="comment"># start image capture loop</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        <span class="comment"># Path to the file to be uploaded</span></div><div class="line">        FILENAME = datetime.datetime.now().strftime(<span class="string">"%m%d%y%H%M%S"</span>) + <span class="string">'.jpg'</span></div><div class="line"></div><div class="line">        <span class="comment"># Metadata about the file.</span></div><div class="line">        MIMETYPE = <span class="string">'image/jpg'</span></div><div class="line">        TITLE = FILENAME</div><div class="line">        DESCRIPTION = <span class="string">'Caputured by CapturePi '</span> + VERSION</div><div class="line"></div><div class="line">        <span class="comment"># capture the file to ./data</span></div><div class="line">        camera.capture(LOCALPATH + FILENAME)</div><div class="line">        print(<span class="string">"Captured: "</span>, FILENAME)</div><div class="line"></div><div class="line">        <span class="comment"># Upload the image.</span></div><div class="line">        <span class="comment"># MediaFileUpload abstracts uploading file contents from a file on disk.</span></div><div class="line">        media_body = apiclient.http.MediaFileUpload(</div><div class="line">            LOCALPATH + FILENAME,</div><div class="line">            mimetype=MIMETYPE,</div><div class="line">            resumable=<span class="keyword">True</span></div><div class="line">        )</div><div class="line"></div><div class="line">        <span class="comment"># The body contains the metadata for the file.</span></div><div class="line">        body = &#123;</div><div class="line">        <span class="string">'name'</span>: TITLE,</div><div class="line">        <span class="string">'title'</span>: TITLE,</div><div class="line">        <span class="string">'description'</span>: DESCRIPTION,</div><div class="line">        <span class="string">'parents'</span>: [FOLDER_ID]</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment"># Perform the request and print the result.</span></div><div class="line">        uploaded = <span class="number">0</span></div><div class="line">        <span class="keyword">while</span> uploaded == <span class="number">0</span>:</div><div class="line">            <span class="keyword">try</span>:</div><div class="line">                result = service.files().create(</div><div class="line">                    body=body,</div><div class="line">                    media_body=media_body</div><div class="line">                    ).execute()</div><div class="line"></div><div class="line">                <span class="keyword">if</span> result != <span class="number">0</span>:</div><div class="line">                    uploaded = <span class="number">1</span></div><div class="line">                    print(<span class="string">'Uploaded: '</span>, FILENAME)</div><div class="line">                    os.remove(LOCALPATH + FILENAME)</div><div class="line">            <span class="keyword">except</span>:</div><div class="line">                uploaded = <span class="number">0</span></div><div class="line">                print(<span class="string">"Failed to submit, try again in 1 minute."</span>)</div><div class="line">                sleep(<span class="number">60</span>)</div><div class="line"></div><div class="line">        time.sleep(float(INTERVAL))</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/uploads/timelapse-on-euclid-hall.gif&quot; class=&quot;full-image&quot; alt=&quot;timelapse&quot; title=&quot;在 Euclid Hall 屋顶用 Raspberry Pi 拍摄的延时摄影&quot; /&gt;
&lt;p&gt;　　每一次我跑步上 Berkeley Hills，沿途就可以眺望北湾两岸的风景。于是我想要用树莓派在那些观景点完成一个长时间的延时摄影。这周终于付诸实践。&lt;br&gt;
    
    </summary>
    
      <category term="Code" scheme="http://blog.zealoft.com/categories/Code/"/>
    
    
      <category term="Weekly Project" scheme="http://blog.zealoft.com/tags/Weekly-Project/"/>
    
      <category term="Raspeberry Pi" scheme="http://blog.zealoft.com/tags/Raspeberry-Pi/"/>
    
      <category term="Timelapse" scheme="http://blog.zealoft.com/tags/Timelapse/"/>
    
  </entry>
  
  <entry>
    <title>再一次想起被学霸环绕的恐惧</title>
    <link href="http://blog.zealoft.com/2016/08/31/%E5%86%8D%E4%B8%80%E6%AC%A1%E6%83%B3%E8%B5%B7%E8%A2%AB%E5%AD%A6%E9%9C%B8%E7%8E%AF%E7%BB%95%E7%9A%84%E6%81%90%E6%83%A7/"/>
    <id>http://blog.zealoft.com/2016/08/31/再一次想起被学霸环绕的恐惧/</id>
    <published>2016-09-01T04:23:23.000Z</published>
    <updated>2016-10-16T08:31:37.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/uploads/ML@B.png" class="full-image" alt="ML@B" title="Machine Learning @ Berkeley">
<p>转到 Berkeley City College 后课业压力小了很多。<a id="more"></a>上课内容非常简单，长时间浸淫在这种氛围里，也变得松懈起来。由于很多 Berkeley City College 的学生后来转到了 UCB，时间长了我竟然有一种错觉，觉得 UCB 的学生不过如此。然而其实虽然都在 Berkeley，虽然只有两个 block 的距离，但是这中间的差距实在太大了。</p>
<p>今天去参加了 <a href="https://ml.berkeley.edu/" target="_blank" rel="external">Machine Learning @ Berkeley</a> 的招新活动，再一次想起了在哈工大的时候的那种被学霸环绕的恐慌感。他们的 Presentation 很丰富，也很有条理；大家的表达能力都很强。我第一次感觉到那些占领科技新闻头条的项目，就来自身边的这些人。</p>
<p>我需要压迫感来促进我进步，失去这种压迫感，我已经放松了太多。与 UCB 的学生们住在一起，就以为已经在这个环境里，跟上了这个节奏，然而实际上学习的事情在生活里也没有体现。也许我应该多去 Soda Hall 学习。</p>
<p>Berkeley City College 的课程肯定要稳定在 A，但是 UC Berkeley 的活动也要积极参加。学生活动什么的就少来一点吧，差一点又要入坑呐。</p>
<p>要学的东西确实太多了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/uploads/ML@B.png&quot; class=&quot;full-image&quot; alt=&quot;ML@B&quot; title=&quot;Machine Learning @ Berkeley&quot; /&gt;
&lt;p&gt;转到 Berkeley City College 后课业压力小了很多。
    
    </summary>
    
      <category term="Life" scheme="http://blog.zealoft.com/categories/Life/"/>
    
    
      <category term="ML@B" scheme="http://blog.zealoft.com/tags/ML-B/"/>
    
      <category term="UC Berkekey" scheme="http://blog.zealoft.com/tags/UC-Berkekey/"/>
    
      <category term="Berkeley City College" scheme="http://blog.zealoft.com/tags/Berkeley-City-College/"/>
    
      <category term="Machine Learning" scheme="http://blog.zealoft.com/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>聚集</title>
    <link href="http://blog.zealoft.com/2016/08/30/%E8%81%9A%E9%9B%86/"/>
    <id>http://blog.zealoft.com/2016/08/30/聚集/</id>
    <published>2016-08-31T04:27:32.000Z</published>
    <updated>2016-09-09T05:13:52.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>Say a college is trying to enhance social diversity by increasing the number of international students. These students may add a dimension of difference, but as the number of students from a particular nation increases, they become more likely to form their own social group.</p>
<p><em>Society, The Basics (13th)</em></p>
</blockquote>
<p>我非常明显的感受到了这种力量。<br><a id="more"></a></p>
<p>上个学期，我主要都在学习一些文科课程，明显学生的民族或种族更加多样，我感到与同学交流没有那么困难；而这个学期，我加入了更多理科课程，亚裔的学生多了一些，这种亚洲学生聚集的倾向是很明显的。注意，我说的是亚裔：我相信这种聚集效应在看到人们相互看到彼此的时候，就已经起作用了。同一个国家的学生更倾向于坐在一起，而亚裔的学生也会更多的找我交流。而我与其他民族之间的交流很明显有着一层隔膜。</p>
<p>我一直都希望打破自己所在的文化圈，为此做了很多努力。我住进了 Berkeley Student Cooperative，避免依赖和中国学生交流，但是那种效应将我隔离在其他民族圈之外。</p>
<p>不要向这种力量妥协。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;Say a college is trying to enhance social diversity by increasing the number of international students. These students may add a dimension of difference, but as the number of students from a particular nation increases, they become more likely to form their own social group.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Society, The Basics (13th)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我非常明显的感受到了这种力量。&lt;br&gt;
    
    </summary>
    
      <category term="Life" scheme="http://blog.zealoft.com/categories/Life/"/>
    
    
  </entry>
  
  <entry>
    <title>送别</title>
    <link href="http://blog.zealoft.com/2016/08/28/%E9%80%81%E5%88%AB/"/>
    <id>http://blog.zealoft.com/2016/08/28/送别/</id>
    <published>2016-08-28T21:06:46.000Z</published>
    <updated>2016-09-09T05:14:33.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>『差不多该安检了。』</p>
</blockquote>
<a id="more"></a>
<p>　　康大师说出这句话，我才忽然感到即将失去重要之物，喉咙竟突然哽住，一时站不起来。我已经习惯于慵懒与麻木；但这一刻，感情却一下渗出来。我不能说话，生怕这样的感觉继续发酵。<br>　　我不愿去想的，或者一直懒得去想。你哭泣的时候，我也只是安慰。不去想的，不去想你为什么哭。不知何时起，丰富的感情在我的心里成为了年少的事。对于自己感情的波动总是鄙薄，想要很快遏制掉。『重要的是怎么解决，哭是没有用的。』<br>　　而今天才想起，有些事情是无需解决的，有些时刻是应当哭泣的。走向安检区，你的眼圈果然红红的，又要哭了。<br>　　抱着你才想起一年要抱不到了。你明明每天晚上都在提醒我；但那些时候我都不以为意。『旅客和工作人员通道，其他人禁止入内。』那行字铛、铛、铛、铛猛敲我的脑袋，我只能紧紧抱着你。无法再麻木，也不能再逃避。<br>　　我听不清你和我说了什么。但你一转身过去，就跨过银河。七夕之夜已经过去，又要再等漫长的一年。走两步，再回头，你就淹没在那人群里。我不愿让你望着，却也不就离开。站着，坐着，看看你，招招手。木头脑袋里还是没有水，只是嗡嗡地响。<br>　　Lyft司机不很识相。我已经告诉他刚刚送走了女朋友，他还是一定要和我聊上海。跑上了火车，打开电脑，Calendar 提醒『See Chloe Off, 25 minutes』。但此刻，我的火车已经缓缓开动，驶离圣何塞。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;『差不多该安检了。』&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Life" scheme="http://blog.zealoft.com/categories/Life/"/>
    
    
  </entry>
  
</feed>
